    <%- include("../partials/admin/header.ejs") %>

    <body>
        <div class="screen-overlay"></div>
        <%- include("../partials/admin/sidepannel.ejs") %>
        <main class="main-wrap">
            <section class="content-main">
                <div class="content-header">
                    <div>
                        <h2 class="content-title card-title">Dashboard</h2>
                       
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-3">
                        <div class="card card-body mb-4">
                            <article class="icontext">
                                <span class="icon icon-sm rounded-circle bg-warning-light"><i class="text-warning material-icons md-qr_code"></i></span>
                                <div class="text">
                                    <h6 class="mb-1 card-title">Total Count</h6>
                                    <span id="totalUsers"><%= count %></span>
                                </div>
                            </article>
                        </div>
                    </div>
                    <div class="col-lg-3">
                        <div class="card card-body mb-4">
                            <article class="icontext">
                                <span class="icon icon-sm rounded-circle bg-warning-light"><i class="text-warning material-icons md-qr_code"></i></span>
                                <div class="text">
                                    <h6 class="mb-1 card-title">Today's Count</h6>
                                    <span id="todaysCount"><%= todaysCount %></span>
                                </div>
                            </article>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-12 mb-3">
                        <div class="d-flex justify-content-center align-items-center gap-2">
                            <button type="button" class="btn btn-primary" id="todayButton">Today</button>
                            <button type="button" class="btn btn-primary" id="monthButton">
                                <span id="currentMonth"></span>
                            </button>
                            <button type="button" class="btn btn-primary" id="yearButton">
                                <span id="currentYear"></span>
                            </button>
                        </div>
                    </div>
                </div>

                <!-- Dummy Chart Placeholder -->
                <div class="row">
                    <div class="col-12">
                        <div class="card card-body mb-4">
                            <canvas id="dummyChart" width="400" height="200"></canvas>
                        </div>
                    </div>
                </div>

            </section>
        </main>

        <%- include("../partials/admin/footer.ejs") %>

        <!-- Include Chart.js library -->
        <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

        <script>
            const currentDate = new Date();
            const months = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
            
            // Set dynamic month and year for the buttons
            document.getElementById('currentMonth').textContent = months[currentDate.getMonth()];
            document.getElementById('currentYear').textContent = currentDate.getFullYear();

            const ctx = document.getElementById('dummyChart').getContext('2d');
            let dummyChart = new Chart(ctx, {
    type: 'bar',
    data: {
        labels: [], // Time-based labels (day, month, etc.)
        datasets: [{
            label: 'Users Count',
            data: [], // Dynamic user counts
            borderColor: 'rgba(255, 99, 132, 1)',  // Darker red border
            backgroundColor: 'rgba(255, 99, 132, 0.7)',  // Darker red bars with transparency
        }]
    },
    options: {
        responsive: true,
        scales: {
            y: {
                beginAtZero: true,  // Start the y-axis from 0
                ticks: {
                    stepSize: 10,  // Set the interval between y-axis ticks
                }
            }
        }
    }
});

            const fetchChartData = async (type) => {
                const response = await fetch(`/admin/dashboard/chart?type=${type}`);
                const data = await response.json();
                console.log('Chart Data:', data); // Log to verify data
                // Update the chart with dynamic data
                dummyChart.data.labels = data.labels;
                dummyChart.data.datasets[0].data = data.counts;
                dummyChart.update();
            };

            // Button Event Listeners
            document.getElementById('todayButton').addEventListener('click', () => fetchChartData('today'));
            document.getElementById('monthButton').addEventListener('click', () => fetchChartData('month'));
            document.getElementById('yearButton').addEventListener('click', () => fetchChartData('year'));

            window.onload = () => {
            fetchChartData('month');
        };
        </script>
    </body>
    </html>
